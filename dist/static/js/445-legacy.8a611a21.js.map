{"version":3,"file":"static/js/445-legacy.8a611a21.js","mappings":"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","sources":["webpack://vue_shop/./src/components/goods/Params.vue?2ff6","webpack://vue_shop/src/components/goods/Params.vue","webpack://vue_shop/./src/components/goods/Params.vue?35a8","webpack://vue_shop/./src/components/goods/Params.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('Breadcrumb',{attrs:{\"name1\":\"商品管理\",\"name2\":\"参数列表\"}}),_c('el-card',[_c('el-alert',{attrs:{\"title\":\"注意：只允许为第三级分类设置相关参数！\",\"type\":\"warning\",\"closable\":false,\"show-icon\":\"\"}}),_c('el-row',{staticClass:\"cat_opt\"},[_c('el-col',[_c('span',[_vm._v(\"选择商品分类：\")]),_c('el-cascader',{attrs:{\"options\":_vm.catelist,\"props\":Object.assign({}, {expandTrigger: 'hover'}, _vm.cateProps)},on:{\"change\":_vm.handleChange},model:{value:(_vm.selectdCateKeys),callback:function ($$v) {_vm.selectdCateKeys=$$v},expression:\"selectdCateKeys\"}})],1)],1),_c('el-tabs',{on:{\"tab-click\":_vm.handleTabClick},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"动态参数\",\"name\":\"many\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"添加参数\")]),_c('el-table',{attrs:{\"data\":_vm.manyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClose(i, scope.row)}}},[_vm._v(\" \"+_vm._s(item)+\" \")])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"label\":\"#\",\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"label\":\"参数名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"静态属性\",\"name\":\"only\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"添加属性\")]),_c('el-table',{attrs:{\"data\":_vm.onlyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClose(i, scope.row)}}},[_vm._v(\" \"+_vm._s(item)+\" \")])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"label\":\"#\",\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"label\":\"属性名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)],1),_c('el-dialog',{attrs:{\"title\":(\"添加\" + _vm.titleText),\"visible\":_vm.addDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addDialogVisible=$event},\"close\":_vm.addDialogClosed}},[_c('el-form',{ref:\"addFormRef\",attrs:{\"model\":_vm.addForm,\"rules\":_vm.addFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.addForm.attr_name),callback:function ($$v) {_vm.$set(_vm.addForm, \"attr_name\", $$v)},expression:\"addForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addParams}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":(\"添加\" + _vm.titleText),\"visible\":_vm.editDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event},\"close\":_vm.editDialogClosed}},[_c('el-form',{ref:\"editFormRef\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.editFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.editForm.attr_name),callback:function ($$v) {_vm.$set(_vm.editForm, \"attr_name\", $$v)},expression:\"editForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editParams}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 面包屑导航区 -->\r\n    <Breadcrumb name1=\"商品管理\" name2=\"参数列表\" />\r\n\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <!-- 警告区域 -->\r\n      <el-alert\r\n        title=\"注意：只允许为第三级分类设置相关参数！\"\r\n        type=\"warning\"\r\n        :closable=\"false\"\r\n        show-icon\r\n      >\r\n      </el-alert>\r\n\r\n      <!-- 选择商品分类区域 -->\r\n      <el-row class=\"cat_opt\">\r\n        <el-col>\r\n          <span>选择商品分类：</span>\r\n          <!-- 选择商品分类的级联选择框 -->\r\n          <el-cascader\r\n            v-model=\"selectdCateKeys\"\r\n            :options=\"catelist\"\r\n            :props=\"{ expandTrigger: 'hover', ...cateProps }\"\r\n            @change=\"handleChange\"\r\n          ></el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- tabs 页签区域 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n        <!-- 添加动态参数的面板 -->\r\n        <el-tab-pane label=\"动态参数\" name=\"many\">\r\n          <!-- 添加参数的按钮 -->\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            :disabled=\"isBtnDisabled\"\r\n            @click=\"addDialogVisible = true\"\r\n            >添加参数</el-button\r\n          >\r\n          <!-- 动态参数表格 -->\r\n          <el-table :data=\"manyTableData\" border stripe>\r\n            <!-- 展开行 -->\r\n            <el-table-column type=\"expand\">\r\n              <template v-slot=\"scope\">\r\n                <!-- 循环渲染tag标签 -->\r\n                <el-tag\r\n                  v-for=\"(item, i) in scope.row.attr_vals\"\r\n                  :key=\"i\"\r\n                  closable\r\n                  @close=\"handleClose(i, scope.row)\"\r\n                >\r\n                  {{ item }}\r\n                </el-tag>\r\n                <!-- 输入的文本框 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <!-- 添加的按钮 -->\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                  >+ New Tag</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column label=\"#\" type=\"index\"></el-table-column>\r\n            <el-table-column\r\n              label=\"参数名称\"\r\n              prop=\"attr_name\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template v-slot=\"scope\">\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"showEditDialog(scope.row.attr_id)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"removeParams(scope.row.attr_id)\"\r\n                  >删除</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <!-- 添加静态属性的面板 -->\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <!-- 添加属性的按钮 -->\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            :disabled=\"isBtnDisabled\"\r\n            @click=\"addDialogVisible = true\"\r\n            >添加属性</el-button\r\n          >\r\n          <!-- 静态属性表格 -->\r\n          <el-table :data=\"onlyTableData\" border stripe>\r\n            <!-- 展开行 -->\r\n            <el-table-column type=\"expand\">\r\n              <template v-slot=\"scope\">\r\n                <!-- 循环渲染tag标签 -->\r\n                <el-tag\r\n                  v-for=\"(item, i) in scope.row.attr_vals\"\r\n                  :key=\"i\"\r\n                  closable\r\n                  @close=\"handleClose(i, scope.row)\"\r\n                >\r\n                  {{ item }}\r\n                </el-tag>\r\n                <!-- 输入的文本框 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <!-- 添加的按钮 -->\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                  >+ New Tag</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column label=\"#\" type=\"index\"></el-table-column>\r\n            <el-table-column\r\n              label=\"属性名称\"\r\n              prop=\"attr_name\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template v-slot=\"scope\">\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"showEditDialog(scope.row.attr_id)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"removeParams(scope.row.attr_id)\"\r\n                  >删除</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n\r\n    <!-- 添加参数的对话框 -->\r\n    <el-dialog\r\n      :title=\"`添加${titleText}`\"\r\n      :visible.sync=\"addDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"addDialogClosed\"\r\n    >\r\n      <!-- 添加参数的对话框 -->\r\n      <el-form\r\n        ref=\"addFormRef\"\r\n        :model=\"addForm\"\r\n        :rules=\"addFormRules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"addForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改参数的对话框 -->\r\n    <el-dialog\r\n      :title=\"`添加${titleText}`\"\r\n      :visible.sync=\"editDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"editDialogClosed\"\r\n    >\r\n      <!-- 修改参数的对话框 -->\r\n      <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"editForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 商品分类列表\r\n      catelist: [],\r\n      // 级联选择框的配置对象\r\n      cateProps: {\r\n        value: \"cat_id\",\r\n        label: \"cat_name\",\r\n        children: \"children\",\r\n      },\r\n      // 级联选择框双向绑定的数组\r\n      selectdCateKeys: [],\r\n      // 被激活的页签的名称\r\n      activeName: \"many\",\r\n      // 动态参数的数据\r\n      manyTableData: [],\r\n      // 静态属性的数据\r\n      onlyTableData: [],\r\n      // 控制添加对话框的显示与隐藏\r\n      addDialogVisible: false,\r\n      // 添加参数的表单数据对象\r\n      addForm: {\r\n        attr_name: \"\",\r\n      },\r\n      // 添加表单的验证规则对象\r\n      addFormRules: {\r\n        attr_name: [\r\n          { required: true, message: \"请输入参数名称\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      // 控制修改对话框的显示与隐藏\r\n      editDialogVisible: false,\r\n      // 修改的表单数据对象\r\n      editForm: {},\r\n      // 修改表单的验证规则对象\r\n      editFormRules: {\r\n        attr_name: [\r\n          { required: true, message: \"请输入参数名称\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getCateList();\r\n  },\r\n  methods: {\r\n    // 获取所有的商品分类列表\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get(\"categories\");\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取商品分类失败！\");\r\n      }\r\n      this.catelist = res.data;\r\n      // console.log(this.catelist);\r\n    },\r\n    // 级联选择框选中项变化，会触发这个函数\r\n    handleChange() {\r\n      this.getParamsData();\r\n    },\r\n    // tab页签点击事件的处理函数\r\n    handleTabClick() {\r\n      this.getParamsData();\r\n    },\r\n    // 获取参数的列表数据\r\n    async getParamsData() {\r\n      // 证明选中的不是三级分类\r\n      if (this.selectdCateKeys.length !== 3) {\r\n        this.selectdCateKeys = [];\r\n        this.manyTableData = [];\r\n        this.onlyTableData = [];\r\n        return;\r\n      }\r\n\r\n      // 根据所选分类的id，和当前所处的面板，获取对应的参数\r\n      const { data: res } = await this.$http.get(\r\n        `categories/${this.cateId}/attributes`,\r\n        { params: { sel: this.activeName } }\r\n      );\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取参数列表失败！\");\r\n      }\r\n      // console.log(res);\r\n      res.data.forEach((item) => {\r\n        item.attr_vals = item.attr_vals ? item.attr_vals.split(\" \") : [];\r\n        // 控制文本框的显示与隐藏\r\n        item.inputVisible = false;\r\n        // 文本框中输入的值\r\n        item.inputValue = \"\";\r\n      });\r\n      // console.log(res.data);\r\n      if (this.activeName === \"many\") {\r\n        this.manyTableData = res.data;\r\n      } else {\r\n        this.onlyTableData = res.data;\r\n      }\r\n    },\r\n    // 监听添加对话框的关闭事件\r\n    addDialogClosed() {\r\n      this.$refs.addFormRef.resetFields();\r\n    },\r\n    // 点击按钮，添加参数\r\n    addParams() {\r\n      this.$refs.addFormRef.validate(async (valid) => {\r\n        if (!valid) return;\r\n        const { data: res } = await this.$http.post(\r\n          `categories/${this.cateId}/attributes`,\r\n          { attr_name: this.addForm.attr_name, attr_sel: this.activeName }\r\n        );\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error(\"添加参数失败！\");\r\n        }\r\n        this.$message.success(\"添加参数成功！\");\r\n        this.addDialogVisible = false;\r\n        this.getParamsData();\r\n      });\r\n    },\r\n    // 点击按钮，展示修改的对话框\r\n    async showEditDialog(attr_id) {\r\n      // 查询当前参数的信息\r\n      const { data: res } = await this.$http.get(\r\n        `categories/${this.cateId}/attributes/${attr_id}`,\r\n        { params: { attr_sel: this.activeName } }\r\n      );\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取参数信息失败！\");\r\n      }\r\n      this.editForm = res.data;\r\n      this.editDialogVisible = true;\r\n    },\r\n    // 重置修改的表单\r\n    editDialogClosed() {\r\n      this.$refs.editFormRef.resetFields();\r\n    },\r\n    // 点击按钮，修改参数信息\r\n    editParams() {\r\n      this.$refs.editFormRef.validate(async (valid) => {\r\n        if (!valid) return;\r\n        const { data: res } = await this.$http.put(\r\n          `categories/${this.cateId}/attributes/${this.editForm.attr_id}`,\r\n          { attr_name: this.editForm.attr_name, attr_sel: this.activeName }\r\n        );\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(\"修改参数失败！\");\r\n        }\r\n        this.$message.success(\"修改参数成功！\");\r\n        this.getParamsData();\r\n        this.editDialogVisible = false;\r\n      });\r\n    },\r\n    // 根据id删除对应的参数项\r\n    async removeParams(attr_id) {\r\n      const confirmResult = await this.$confirm(\r\n        \"此操作将永久删除该参数, 是否继续?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n      ).catch((err) => err);\r\n      if (confirmResult !== \"confirm\") {\r\n        return this.$message.info(\"已取消删除！\");\r\n      }\r\n\r\n      // 发起删除的请求\r\n      const { data: res } = await this.$http.delete(\r\n        `categories/${this.cateId}/attributes/${attr_id}`\r\n      );\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"删除参数失败！\");\r\n      }\r\n      this.$message.success(\"删除参数成功！\");\r\n      this.getParamsData();\r\n    },\r\n    // 文本框失去焦点或按下了 enter 都会触发\r\n    async handleInputConfirm(row) {\r\n      if (row.inputValue.trim().length === 0) {\r\n        row.inputValue = \"\";\r\n        row.inputVisible = false;\r\n        return;\r\n      }\r\n      // 输入合法内容\r\n      row.attr_vals.push(row.inputValue.trim());\r\n      row.inputValue = \"\";\r\n      row.inputVisible = false;\r\n      this.saveAttrVals(row);\r\n    },\r\n    // 将对 attr_vals 的操作保存到数据库\r\n    async saveAttrVals(row) {\r\n      // 需要发起请求，保存这次操作\r\n      const { data: res } = await this.$http.put(\r\n        `categories/${this.cateId}/attributes/${row.attr_id}`,\r\n        {\r\n          attr_name: row.attr_name,\r\n          attr_sel: row.attr_sel,\r\n          attr_vals: row.attr_vals.join(\" \"),\r\n        }\r\n      );\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"修改参数项失败！\");\r\n      }\r\n      this.$message.success(\"修改参数项成功！\");\r\n    },\r\n    // 点击按钮展示文本输入框\r\n    showInput(row) {\r\n      row.inputVisible = true;\r\n      // 让文本框自动获得焦点\r\n      this.$nextTick(() => {\r\n        this.$refs.saveTagInput.$refs.input.focus();\r\n      });\r\n    },\r\n    // 删除对应的参数可选项\r\n    handleClose(i, row) {\r\n      row.attr_vals.splice(i, 1);\r\n      this.saveAttrVals(row);\r\n    },\r\n  },\r\n  computed: {\r\n    // 如果按钮需要被禁用，则返回true，否则返回false\r\n    isBtnDisabled() {\r\n      if (this.selectdCateKeys.length !== 3) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    // 当前选中的三级分类的Id\r\n    cateId() {\r\n      if (this.selectdCateKeys.length === 3) {\r\n        return this.selectdCateKeys[2];\r\n      }\r\n      return null;\r\n    },\r\n    // 动态计算标题的文本\r\n    titleText() {\r\n      if (this.activeName === \"many\") {\r\n        return \"动态参数\";\r\n      }\r\n      return \"静态属性\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.cat_opt {\r\n  margin: 15px 0;\r\n}\r\n.el-tag {\r\n  margin: 10px;\r\n}\r\n.input-new-tag {\r\n  width: 120px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Params.vue?vue&type=template&id=5e8051e8&scoped=true&\"\nimport script from \"./Params.vue?vue&type=script&lang=js&\"\nexport * from \"./Params.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Params.vue?vue&type=style&index=0&id=5e8051e8&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5e8051e8\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","catelist","Object","assign","expandTrigger","cateProps","on","handleChange","model","value","callback","$$v","selectdCateKeys","expression","handleTabClick","activeName","isBtnDisabled","$event","addDialogVisible","manyTableData","scopedSlots","_u","key","fn","scope","_l","row","item","i","handleClose","_s","ref","handleInputConfirm","nativeOn","type","indexOf","_k","keyCode","$set","showInput","showEditDialog","attr_id","removeParams","onlyTableData","titleText","addDialogClosed","addForm","addFormRules","slot","addParams","editDialogVisible","editDialogClosed","editForm","editFormRules","editParams","staticRenderFns","data","label","children","attr_name","required","message","trigger","created","methods","getCateList","res","getParamsData","params","sel","valid","attr_sel","confirmButtonText","cancelButtonText","catch","confirmResult","saveAttrVals","attr_vals","computed","cateId","component"],"sourceRoot":""}